{"version":3,"sources":["Components/Footer.js","Components/TopBar.js","Components/Wizard/WizardOptions.js","Components/Wizard/WizardStepper.js","Components/Wizard/WizardResults.js","Components/Wizard/Wizard.js","Components/YearSlider.js","Components/SelectPlayerCount.js","Components/PlaytimeSlider.js","Components/MechanicSelect.js","Components/CategorySelect.js","Components/Sorting.js","Components/OrderSwitch.js","Components/Filters.js","Components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Footer","props","state","Link","href","Date","getFullYear","className","pkg","version","React","Component","useStyles","makeStyles","theme","root","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","spacing","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","menuIcon","marginRight","topBarButton","TopBar","classes","selectActiveView","event","currentTarget","value","AppBar","Toolbar","Typography","variant","noWrap","Button","onClick","toggleContainer","margin","buttonGroup","primary","main","toggleButton","ToggleButtons","useState","alignment","setAlignment","onOptionSelected","newAlignment","onSelect","step","Grid","container","justify","item","sm","md","ToggleButtonGroup","exclusive","onChange","aria-label","options","map","ToggleButton","key","label","button","finishScreen","textAlign","instructions","marginTop","marginBottom","wizardOptions","stepOptions","HorizontalLinearStepper","activeStep","setActiveStep","steps","playerCount","setPlayerCount","playTime","setPlayTime","setTheme","Stepper","index","Step","StepLabel","length","resetButton","getStepContent","disabled","prevActiveStep","onFinish","WizardResults","items","this","results","createMuiTheme","secondary","light","contrastText","contrastThreshold","tonalOffset","isFetching","ThemeProvider","id","src","thumb_url","alt","name","msrp","year_published","min_players","max_players","primary_publisher","designers","join","min_playtime","max_playtime","min_age","url","target","dangerouslySetInnerHTML","__html","description","Wizard","isActive","isLoaded","error","resultItems","fetchUrl","setState","isHidden","playerCountParameter","categories","time","parseFloat","fetch","then","res","json","result","games","activeView","getGames","bind","valuetext","YearSlider","year","setValue","Slider","newValue","handleChange","valueLabelDisplay","aria-labelledby","getAriaValueText","min","max","marks","SelectPlayerCount","PlaytimeSlider","formControl","minWidth","maxWidth","noLabel","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","selectedNames","MechanicSelect","mechanicId","setMechanicId","FormControl","InputLabel","Select","labelId","multiple","selection","selectedName","includes","indexOf","splice","push","input","Input","renderValue","selected","mechanic","MenuItem","Checkbox","checked","ListItemText","CategorySelect","categoryId","setCategoryId","category","Sorting","sort_by","setSortBy","updateSort","option","OrderBySwitch","withStyles","switchBase","teal","thumb","track","Switch","OrderSwitch","ascending","FormGroup","component","Filters","mechanics","selectedMechanics","filters","filter","newFilters","submitFilters","message","updateFilters","Search","selectedFilters","getData","charAt","substr","getFilters","App","newActiveView","GlobalCss","changeActiveView","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c231508d.chunk.js","sourcesContent":["import React from 'react'\nimport Link from '@material-ui/core/Link';\nimport pkg from '../../package.json';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  render () {\n    return (\n      <footer>\n        <p>Made by: <Link href=\"https://github.com/dire\">dire</Link> | Copyright © {(new Date().getFullYear())}</p>\n        <p>Data is fetched from <Link href=\"https://www.boardgameatlas.com/\">Board Game Atlas</Link> API</p>\n        <p className=\"version\">v{pkg.version}</p>\n      </footer>\n    )\n  }\n}\n\nexport default Footer","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport TuneIcon from '@material-ui/icons/Tune';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n  menuIcon: {\n    marginRight: \"10px\",\n  },\n  topBarButton: {\n    '&:hover': {\n      backgroundColor: \"rgba(0, 0, 0, 0.12)\",\n    }\n  }\n}));\n\nexport default function TopBar(props) {\n  const classes = useStyles();\n\n  const selectActiveView = event => {\n    props.selectActiveView(event.currentTarget.value)\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Board Game Recommendation App - Find the next game to play\n          </Typography>\n          <Button className={classes.topBarButton} color=\"inherit\" onClick={selectActiveView} value=\"wizard\"><TimelineIcon className={classes.menuIcon} />Simple</Button>\n          <Button className={classes.topBarButton} color=\"inherit\" onClick={selectActiveView} value=\"detailedSearch\"><TuneIcon className={classes.menuIcon} />Detailed search</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  toggleContainer: {\n    margin: theme.spacing(2, 0),\n  },\n  buttonGroup: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  toggleButton: {\n    color: 'white',\n    '&:hover': {\n      backgroundColor: \"rgba(0, 0, 0, 0.12)\",\n    },\n    '&.Mui-selected': {\n      color: \"white\",\n    }\n  }\n}));\n\nexport default function ToggleButtons(props) {\n  const [alignment, setAlignment] = React.useState('left');\n\n  const onOptionSelected = (event, newAlignment) => {\n    setAlignment(newAlignment);\n    props.onSelect(props.step, event.currentTarget.value);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid container justify=\"center\" spacing={2}>\n      <Grid item sm={12} md={6}>\n        <div className={classes.toggleContainer}>\n          <ToggleButtonGroup\n            className={classes.buttonGroup}\n            value={alignment}\n            exclusive\n            onChange={onOptionSelected}\n            aria-label=\"text alignment\"\n          >\n            {props.options.map((item) =>\n              <ToggleButton className={classes.toggleButton} onClick={onOptionSelected} value={item.value} variant=\"contained\" color=\"primary\" key={item.value}>{item.label}</ToggleButton>\n            )}\n          </ToggleButtonGroup>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport WizardOptions from './WizardOptions'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    margin: '50px 0'\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  finishScreen: {\n    textAlign: 'center',\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  wizardOptions: {\n    textAlign: 'center',\n    margin: '50px 0'\n  },\n  stepOptions: {\n    margin: '50px 0',\n  },\n}));\n\nfunction getSteps() {\n  return ['Player count', 'Playtime', 'Theme'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Lone wolf or got a group?';\n    case 1:\n      return 'A quick round or full gaming night?';\n    case 2:\n      return 'Theme party!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function HorizontalLinearStepper(props) {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = React.useState(0)\n  const steps = getSteps()\n  const [playerCount, setPlayerCount] = React.useState(0)\n  const [playTime, setPlayTime] = React.useState(0)\n  const [theme, setTheme] = React.useState(0)\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1)\n\n    if (activeStep + 1 === steps.length) {\n      props.onFinish(playerCount, playTime, theme)\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1)\n  };\n\n  const handleReset = () => {\n    setActiveStep(0)\n  };\n\n  const updatePlayerCount = (label, value) => {\n    setPlayerCount(value)\n  }\n\n  const updatePlayTime = (label, value) => {\n    setPlayTime(value)\n  }\n\n  const updateTheme = (label, value) => {\n    setTheme(value)\n  }\n\n  const playerCountOptions = [\n    {\n      'label': 'Solo',\n      'value': 1\n    },\n    {\n      'label': 'Duo',\n      'value': 2\n    },\n    {\n      'label': '2-4',\n      'value': 3\n    },\n    {\n      'label': '4+',\n      'value': 4\n    },\n  ]\n\n  const playTimeOptions = [\n    {\n      'label': '10min',\n      'value': 10\n    },\n    {\n      'label': '1 hour',\n      'value': 60\n    },\n    {\n      'label': '2 hour',\n      'value': 120\n    },\n    {\n      'label': 'Got all night',\n      'value': 9999\n    },\n  ]\n\n  const themeOptions = [\n    {\n      'label': 'Fantasy',\n      'value': 'ZTneo8TaIO'\n    },\n    {\n      'label': 'Horror',\n      'value': 'cAIkk5aLdQ'\n    },\n    {\n      'label': 'Sci-fi',\n      'value': '3B3QpKvXD3'\n    },\n    {\n      'label': 'Strategy',\n      'value': 'O0ogzwLUe8'\n    },\n  ]\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {}\n          const labelProps = {}\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div className={classes.finishScreen}>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.resetButton}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div className={classes.wizardOptions}>\n            <Typography className={classes.instructions} variant=\"h3\">{getStepContent(activeStep)}</Typography>\n            {activeStep === 0 &&\n              <div className={classes.stepOptions}>\n                <WizardOptions step=\"playerCount\" onSelect={updatePlayerCount} options={playerCountOptions} />\n              </div>\n            }\n            {activeStep === 1 &&\n              <div className={classes.stepOptions}>\n                <WizardOptions step=\"playTime\" onSelect={updatePlayTime} options={playTimeOptions} />\n              </div>\n            }\n            {activeStep === 2 &&\n              <div className={classes.stepOptions}>\n                <WizardOptions step=\"theme\" onSelect={updateTheme} options={themeOptions} />\n              </div>\n            }\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","import React from 'react'\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Link from '@material-ui/core/Link'\n\nclass WizardResults extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    };\n  }\n\n  render() {\n    let items = this.props.results\n\n    const theme = createMuiTheme({\n      palette: {\n        primary: {\n          // light: will be calculated from palette.primary.main,\n          main: '#009688',\n          // dark: will be calculated from palette.primary.main,\n          // contrastText: will be calculated to contrast with palette.primary.main\n        },\n        secondary: {\n          light: '#0066ff',\n          main: '#0044ff',\n          // dark: will be calculated from palette.secondary.main,\n          contrastText: '#ffcc00',\n        },\n        // Used by `getContrastText()` to maximize the contrast between\n        // the background and the text.\n        contrastThreshold: 3,\n        // Used by the functions below to shift a color's luminance by approximately\n        // two indexes within its tonal palette.\n        // E.g., shift from Red 500 to Red 300 or Red 700.\n        tonalOffset: 0.2,\n      },\n    });\n\n    if (this.props.isFetching) {\n      return <div className=\"system-message\">Fetching games from the shelf...</div>\n    } else {\n      return (\n        <div>\n          <ThemeProvider theme={theme}>\n            <div className=\"results\">\n              <ul>\n                {items && items.map((item, index) => (\n                  <li className=\"result-item\" key={item.id}>\n                    <div className=\"game-thumbnail\">\n                      <img className=\"thumbnail\" src={item.thumb_url} alt={item.name} />\n                    </div>\n                    <div className=\"game-info\">\n                      <span className=\"result-number\">#{index + 1}</span><h2 className=\"game-title\">{item.name}</h2>\n                      <div className=\"game-details\">\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">MSRP:</span> ${item.msrp}\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">Year:</span> {item.year_published}\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">Players:</span> {item.min_players} - {item.max_players}\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">Primary publisher:</span> {item.primary_publisher}\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">Designers:</span> {item.designers.join(', ')}\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">Playtime:</span> {item.min_playtime} - {item.max_playtime} min\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">Min age:</span> {item.min_age}\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">\n                            <Link href={item.url} target=\"_blank\">\n                              BGA Link\n                            </Link>\n                          </span>\n                        </div>\n                      </div>\n                      <p className=\"game-description\" dangerouslySetInnerHTML={{__html: item.description}}></p>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </ThemeProvider>\n        </div>\n      )\n    }\n  }\n}\n\nexport default WizardResults","import React from 'react'\nimport Stepper from './WizardStepper'\nimport Results from './WizardResults'\n\nclass Wizard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isActive: true,\n      isLoaded: false,\n      error: null,\n      resultItems: [],\n      fetchUrl: '',\n      isFetching: false,\n    }\n  }\n\n  toggleHidden () {\n    this.setState({\n      isHidden: !this.state.isHidden\n    })\n  }\n\n  getGames (playerCount, playTime, theme) {\n    let playerCountParameter = ''\n    let categories = theme ? 'categories=' + theme : '';\n\n    if (!playTime) {\n      playTime = 9999\n    }\n\n    let time = parseFloat(playTime) + 1\n\n    switch(playerCount) {\n      case '1':\n        playerCountParameter = '&min_players=1'\n        break;\n      case '2':\n        playerCountParameter = '&lt_min_players=3'\n        break;\n      case '3':\n        playerCountParameter = '&lt_max_players=5'\n        break;\n      case '4':\n        playerCountParameter = '&gt_max_players=4'\n        break;\n      default:\n        playerCountParameter = '&min_players=1'\n    }\n\n    this.setState({\n      isFetching: true,\n    });\n\n    fetch(\"https://blooming-temple-02451.herokuapp.com/?\" + categories + '&lt_max_playtime=' +  time + playerCountParameter)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          isLoaded: true,\n          resultItems: result.games,\n          isFetching: false,\n        });\n      },\n      (error) => {\n        this.setState({\n          isLoaded: false,\n          error,\n          isFetching: false,\n        });\n      }\n    )\n  }\n\n  render() {\n    if (this.props.activeView === 'wizard') {\n      return (\n        <div>\n          <Stepper onFinish={this.getGames.bind(this)} />\n          <Results results={this.state.resultItems} isFetching={this.state.isFetching} />\n        </div>\n      )\n    } else {\n      return (null)\n    }\n  }\n}\n\nexport default Wizard","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\nfunction valuetext(value) {\n  return `${value}`\n}\n\nexport default function YearSlider(props) {\n  const classes = useStyles()\n  let date = new Date()\n  let year = date.getFullYear()\n  const [value, setValue] = React.useState([2000, year]);\n\n  const marks = [\n    {\n      value: 1980,\n      label: '1980',\n    },\n    {\n      value: 1990,\n      label: '1990',\n    },\n    {\n      value: 2000,\n      label: '2000',\n    },\n    {\n      value: 2005,\n      label: '2005',\n    },\n    {\n      value: 2010,\n      label: 2010,\n    },\n    {\n      value: 2019,\n      label: '2019',\n    },\n    {\n      value: 2020,\n      label: '2020',\n    },\n  ];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.handleChange('year-range', newValue)\n  };\n\n  return (\n    <div className={classes.root}>\n      <Slider\n        value={value}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"year-range\"\n        getAriaValueText={valuetext}\n        min={1980}\n        max={year}\n        marks={marks}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\nfunction valuetext(value) {\n  return `${value}`\n}\n\nexport default function SelectPlayerCount(props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState([1, 4]);\n\n  const marks = [\n    {\n      value: 1,\n      label: '1',\n    },\n    {\n      value: 2,\n      label: '2',\n    },\n    {\n      value: 3,\n      label: '3',\n    },\n    {\n      value: 4,\n      label: '4',\n    },\n    {\n      value: 8,\n      label: '8',\n    },\n    {\n      value: 10,\n      label: '10',\n    },\n    {\n      value: 50,\n      label: '50',\n    },\n    {\n      value: 100,\n      label: '100',\n    },\n  ];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.handleChange('player-range', newValue)\n  };\n\n  return (\n    <div className={classes.root}>\n      <Slider\n        value={value}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"player-range\"\n        getAriaValueText={valuetext}\n        min={1}\n        max={100}\n        marks={marks}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\nfunction valuetext(value) {\n  return `${value}`\n}\n\nexport default function PlaytimeSlider(props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState([0, 300]);\n\n  const marks = [\n    {\n      value: 0,\n      label: '0',\n    },\n    {\n      value: 5,\n      label: '5',\n    },\n    {\n      value: 10,\n      label: '10',\n    },\n    {\n      value: 20,\n      label: '20',\n    },\n    {\n      value: 45,\n      label: '45',\n    },\n    {\n      value: 90,\n      label: '90',\n    },\n    {\n      value: 120,\n      label: '120',\n    },\n    {\n      value: 180,\n      label: '180',\n    },\n    {\n      value: 240,\n      label: '240',\n    },\n    {\n      value: 300,\n      label: '300',\n    },\n  ];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.handleChange('playtime-range', newValue)\n  };\n\n  return (\n    <div className={classes.root}>\n      <Slider\n        value={value}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"playtime-range\"\n        getAriaValueText={valuetext}\n        min={0}\n        max={300}\n        marks={marks}\n        step={5}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n    maxWidth: '100%',\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 10 + ITEM_PADDING_TOP,\n      width: 320,\n    },\n  },\n};\n\nlet selectedNames = []\n\nexport default function MechanicSelect (props) {\n  const options = props.options\n  const classes = useStyles()\n  const [mechanicId, setMechanicId] = React.useState([])\n\n  const handleChange = (event, selection) => {\n    let selectedName = selection.props.name\n\n    if (selectedNames.includes(selectedName)) {\n      let index = selectedNames.indexOf(selectedName)\n      selectedNames.splice(index, 1)\n    } else {\n      selectedNames.push(selectedName)\n    }\n\n    setMechanicId(event.target.value)\n    props.handleChange('mechanic', event.target.value)\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"mechanic-select-label\">Game Mechanics</InputLabel>\n        <Select\n          labelId=\"mechanic-select-label\"\n          id=\"mechanic-select\"\n          multiple\n          value={mechanicId}\n          onChange={handleChange}\n          input={<Input />}\n          renderValue={selected => selectedNames.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {options.map(mechanic => (\n            <MenuItem key={mechanic.id} value={mechanic.id} name={mechanic.name}>\n              <Checkbox checked={mechanicId.indexOf(mechanic.id) > -1} />\n              <ListItemText primary={mechanic.name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n    maxWidth: '100%',\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 10 + ITEM_PADDING_TOP,\n      width: 320,\n    },\n  },\n};\n\nlet selectedNames = []\n\nexport default function CategorySelect (props) {\n  const options = props.options\n  const classes = useStyles()\n  const [categoryId, setCategoryId] = React.useState([])\n\n  const handleChange = (event, selection) => {\n    let selectedName = selection.props.name\n\n    if (selectedNames.includes(selectedName)) {\n      let index = selectedNames.indexOf(selectedName)\n      selectedNames.splice(index, 1)\n    } else {\n      selectedNames.push(selectedName)\n    }\n\n    setCategoryId(event.target.value);\n    props.handleChange('categories', event.target.value)\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"category-select-label\">Categories</InputLabel>\n        <Select\n          labelId=\"category-select-label\"\n          id=\"category-select\"\n          multiple\n          value={categoryId}\n          onChange={handleChange}\n          input={<Input />}\n          renderValue={selected => selectedNames.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {options.map(category => (\n            <MenuItem key={category.id} value={category.id} name={category.name}>\n              <Checkbox checked={categoryId.indexOf(category.id) > -1}/>\n              <ListItemText primary={category.name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n    maxWidth: '100%',\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 10 + ITEM_PADDING_TOP,\n      width: 320,\n    },\n  },\n};\n\nexport default function Sorting (props) {\n  const classes = useStyles();\n  const [sort_by, setSortBy] = React.useState('popularity');\n\n  const sortOptions = [\n    {\n      \"id\": \"popularity\",\n      \"name\": \"popularity\"\n    },\n    {\n      \"id\": \"name\",\n      \"name\": \"name\"\n    },\n    {\n      \"id\": \"year_published\",\n      \"name\": \"year published\"\n    }\n  ]\n\n  const updateSort = event => {\n    setSortBy(event.target.value)\n    props.updateSort('sortBy', event.target.value)\n  }\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"sort-by-label\">Sort by</InputLabel>\n        <Select\n          labelId=\"sort-by-label\"\n          id=\"mechanic-select\"\n          value={sort_by}\n          onChange={updateSort}\n          input={<Input />}\n          MenuProps={MenuProps}\n        >\n          {sortOptions.map(option => (\n            <MenuItem key={option.id} value={option.id}>\n              <ListItemText primary={option.name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Switch from '@material-ui/core/Switch'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { teal } from '@material-ui/core/colors'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\n\nconst OrderBySwitch = withStyles(theme => ({\n  switchBase: {\n    color: teal[500],\n    '&$checked': {\n      color: teal[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: teal[500],\n    },\n  },\n  thumb: {},\n  checked: {},\n  track: {},\n}))(Switch)\n\nexport default function OrderSwitch(props) {\n  const [state, setState] = React.useState({ascending: false})\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked })\n    props.handleChange('ascending', event.target.checked)\n  };\n\n  return (\n    <FormGroup>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n          <Grid item>Descending</Grid>\n          <ArrowDownwardIcon />\n          <Grid item>\n            <OrderBySwitch\n              checked={state.ascending}\n              onChange={handleChange('ascending')}\n              value=\"ascending\" \n            />\n          </Grid>\n          <ArrowUpwardIcon />\n          <Grid item>Ascending</Grid>\n        </Grid>\n      </Typography>\n    </FormGroup>\n  );\n}\n","import React from 'react'\nimport SelectYear from './YearSlider'\nimport SelectPlayerCount from './SelectPlayerCount'\nimport PlaytimeSlider from './PlaytimeSlider'\nimport Button from '@material-ui/core/Button'\nimport MechanicSelect from './MechanicSelect'\nimport CategorySelect from './CategorySelect'\nimport Sorting from './Sorting'\nimport OrderSwitch from './OrderSwitch'\n\nclass Filters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      mechanics: [],\n      categories: [],\n      selectedMechanics: '',\n      filters: {\n        'mechanic': [],\n        'categories': [],\n        'min_players': [1],\n        'max_players': [4],\n        'gt_min_playtime': [0],\n        'lt_max_playtime': [300],\n        'gt_year_published' : [2000],\n        'lt_year_published' : [2020],\n        'ascending' : 'false',\n        'sortBy' : 'popularity'\n      },\n    };\n  }\n\n  updateFilters(filter, newValue) {\n    const newFilters = this.state.filters\n    if (filter === 'year-range') {\n      newFilters['gt_year_published'] = newValue[0] - 1\n      newFilters['lt_year_published'] = newValue[1] + 1\n    } else if(filter ==='player-range') {\n      newFilters['min_players'] = newValue[0]\n      newFilters['max_players'] = newValue[1]\n    } else if(filter ==='playtime-range') {\n      newFilters['gt_min_playtime'] = newValue[0] - 1\n      newFilters['lt_max_playtime'] = newValue[1] + 1\n    } else {\n      newFilters[filter] = newValue\n    }\n\n    this.setState({\n      filters: newFilters\n    })\n  };\n\n  submitFilters() {\n    this.props.submitFilters(this.state.filters)\n  }\n\n  componentDidMount() {\n    fetch(\"https://blooming-temple-02451.herokuapp.com/mechanics.php\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            mechanics: result.mechanics\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    fetch(\"https://blooming-temple-02451.herokuapp.com/categories.php\")\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          isLoaded: true,\n          categories: result.categories\n        });\n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n  }\n\n  render () {\n    const { error, isLoaded, mechanics, categories } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <div>Fetching games from the shelf...</div>\n    } else {\n      return (\n        <form className=\"search-filters\">\n          <fieldset>\n            <legend>Filters</legend>\n            <div className=\"filter\"><MechanicSelect handleChange={this.updateFilters.bind(this)} options={mechanics} /></div>\n            <div className=\"filter\"><CategorySelect handleChange={this.updateFilters.bind(this)} options={categories} /></div>\n            <div className=\"filter\">Players: <SelectPlayerCount handleChange={this.updateFilters.bind(this)} /></div>\n            <div className=\"filter\">Playtime: <PlaytimeSlider handleChange={this.updateFilters.bind(this)} /></div>\n            <div className=\"filter\">Release year: <SelectYear handleChange={this.updateFilters.bind(this)} /></div>\n          </fieldset>\n          <fieldset>\n            <legend>Sorting</legend>\n            <Sorting key=\"sorting\" updateSort={this.updateFilters.bind(this)} />\n            <OrderSwitch key=\"ordering\" handleChange={this.updateFilters.bind(this)} />\n          </fieldset>\n          <div className=\"submit-filters\">\n            <Button variant=\"contained\" color=\"primary\" onClick={this.submitFilters.bind(this)}>Search!</Button>\n          </div>\n        </form>\n      )\n    }\n  }\n}\n\nexport default Filters","import React from 'react'\nimport Filters from './Filters'\nimport Link from '@material-ui/core/Link'\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      filters: [],\n      fetchUrl: 'https://blooming-temple-02451.herokuapp.com/?',\n      selectedFilters: '',\n      isActive: false,\n    };\n  }\n\n  getData() {\n    fetch(this.state.fetchUrl)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.games\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  getFilters(filters) {\n    let selectedFilters = ''\n\n    if (filters['mechanic'].length > 0) {\n      selectedFilters = selectedFilters + '&mechanics=' + filters['mechanic']\n    }\n\n    if (filters['categories'].length > 0) {\n      selectedFilters = selectedFilters + '&categories=' + filters['categories']\n    }\n\n\n    if (filters['gt_min_playtime'] !== null) {\n      selectedFilters = selectedFilters + '&gt_min_playtime=' + filters['gt_min_playtime']\n    }\n\n    if (filters['lt_max_playtime'] !== null) {\n      selectedFilters = selectedFilters + '&lt_max_playtime=' + filters['lt_max_playtime']\n    }\n\n    if (filters['min_players'] !== null) {\n      selectedFilters = selectedFilters + '&min_players=' + filters['min_players']\n    }\n\n    if (filters['max_players'] !== null) {\n      selectedFilters = selectedFilters + '&max_players=' + filters['max_players']\n    }\n\n    if (filters['gt_year_published'] !== null) {\n      selectedFilters = selectedFilters + '&gt_year_published=' + filters['gt_year_published']\n    }\n\n    if (filters['lt_year_published'] !== null) {\n      selectedFilters = selectedFilters + '&lt_year_published=' + filters['lt_year_published']\n    }\n\n    if (filters['sortBy'] !== null) {\n      selectedFilters = selectedFilters + '&order_by=' + filters['sortBy']\n    }\n\n    if (filters['ascending'] !== null) {\n      selectedFilters = selectedFilters + '&ascending=' + filters['ascending']\n    }\n\n    if (selectedFilters.charAt(0) === '&') {\n      selectedFilters = selectedFilters.substr(1)\n    }\n\n    this.setState({\n      filters: filters,\n      selectedFilters: selectedFilters,\n      fetchUrl: 'https://blooming-temple-02451.herokuapp.com/?' + selectedFilters\n    }, () => {\n      this.getData()\n    })\n  };\n\n  render() {\n    if (this.props.activeView === 'detailedSearch') {\n      const { error, isLoaded, items } = this.state\n      if (error) {\n        return <div className=\"system-message\">Error: {error.message}</div>\n      } else if (!isLoaded) {\n        return <div className=\"system-message\">Fetching games from the shelf...</div>\n      } else {\n        return (\n          <div className=\"search\">\n            <Filters submitFilters={this.getFilters.bind(this)} />\n            <div className=\"results\">\n              <ul>\n                {items.map((item, index) => (\n                  <li className=\"result-item\" key={item.id}>\n                    <div className=\"game-thumbnail\">\n                      <img className=\"thumbnail\" src={item.thumb_url} alt={item.name} />\n                    </div>\n                    <div className=\"game-info\">\n                      <span className=\"result-number\">#{index + 1}</span><h2 className=\"game-title\">{item.name}</h2>\n                      <div className=\"game-details\">\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">MSRP:</span> ${item.msrp}\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">Year:</span> {item.year_published}\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">Players:</span> {item.min_players} - {item.max_players}\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">Primary publisher:</span> {item.primary_publisher}\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">Designers:</span> {item.designers.join(', ')}\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">Playtime:</span> {item.min_playtime} - {item.max_playtime} min\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">Min age:</span> {item.min_age}\n                        </div>\n                        <div className=\"game-detail\">\n                          <span className=\"detail-title\">\n                            <Link href={item.url} target=\"_blank\">\n                              BGA Link\n                            </Link>\n                          </span>\n                        </div>\n                      </div>\n                      <p className=\"game-description\" dangerouslySetInnerHTML={{__html: item.description}}></p>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        );\n      }\n    } else {\n      return (null)\n    }\n  }\n}\n\nexport default Search\n","import React from 'react'\nimport './App.css'\nimport Container from '@material-ui/core/Container'\nimport Footer from './Components/Footer'\nimport TopBar from './Components/TopBar'\nimport Wizard from './Components/Wizard/Wizard'\nimport Search from './Components/Search'\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeView: 'wizard'\n    }\n  }\n\n  changeActiveView(newActiveView) {\n    this.setState({\n      activeView: newActiveView\n    });\n  }\n\n  render() {\n    const theme = createMuiTheme({\n      palette: {\n        primary: {\n          // light: will be calculated from palette.primary.main,\n          main: '#009688',\n          // dark: will be calculated from palette.primary.main,\n          // contrastText: will be calculated to contrast with palette.primary.main\n        },\n        secondary: {\n          light: '#0066ff',\n          main: '#0044ff',\n          // dark: will be calculated from palette.secondary.main,\n          contrastText: '#ffcc00',\n        },\n        // Used by `getContrastText()` to maximize the contrast between\n        // the background and the text.\n        contrastThreshold: 3,\n        // Used by the functions below to shift a color's luminance by approximately\n        // two indexes within its tonal palette.\n        // E.g., shift from Red 500 to Red 300 or Red 700.\n        tonalOffset: 0.2,\n      },\n    });\n\n    const GlobalCss = withStyles({\n      // @global is handled by jss-plugin-global.\n      '@global': {\n        // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\n        '.MuiSlider-thumb': {\n          height: 20,\n          width: 20,\n          marginTop: \"-8px\",\n          marginLeft: \"-9px\",\n        },\n        '.MuiSlider-rail': {\n          height: 4,\n        },\n        '.MuiSlider-track': {\n          height: 4\n        },\n        '.MuiSlider-mark': {\n          height: 4\n        }\n      }\n    })(() => null);\n\n    return (\n      <div>\n        <ThemeProvider theme={theme}>\n          <GlobalCss />\n          <TopBar selectActiveView={this.changeActiveView.bind(this)} />\n          <Container className=\"main-content\" maxWidth=\"lg\">\n            <Wizard activeView={this.state.activeView} />\n            <Search activeView={this.state.activeView} />\n          </Container>\n          <Container maxWidth=\"lg\">\n            <Footer />\n          </Container>\n        </ThemeProvider>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('board-game-recommender'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}