{"version":3,"sources":["Components/Footer.js","Components/TopBar.js","Components/Wizard/WizardOptions.js","Components/Wizard/WizardStepper.js","Components/Results.js","Components/Wizard/Wizard.js","Components/YearSlider.js","Components/SelectPlayerCount.js","Components/PlaytimeSlider.js","Components/MechanicSelect.js","Components/CategorySelect.js","Components/Sorting.js","Components/OrderSwitch.js","Components/Filters.js","Components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Footer","props","state","Link","href","Date","getFullYear","className","pkg","version","React","Component","useStyles","makeStyles","theme","root","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","spacing","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","menuIcon","marginRight","topBarButton","TopBar","classes","selectActiveView","event","currentTarget","value","AppBar","Toolbar","Typography","variant","noWrap","Button","onClick","toggleContainer","margin","buttonGroup","primary","main","toggleButton","ToggleButtons","useState","alignment","setAlignment","onOptionSelected","newAlignment","onSelect","step","Grid","container","justify","item","sm","md","ToggleButtonGroup","exclusive","onChange","aria-label","options","map","ToggleButton","key","label","button","finishScreen","textAlign","instructions","marginTop","marginBottom","wizardOptions","stepOptions","HorizontalLinearStepper","activeStep","setActiveStep","steps","playerCount","setPlayerCount","playTime","setPlayTime","setTheme","Stepper","index","labelProps","Step","StepLabel","length","resetButton","getStepContent","disabled","prevActiveStep","onFinish","Results","items","this","results","createMuiTheme","secondary","light","contrastText","contrastThreshold","tonalOffset","isFetching","ThemeProvider","id","src","thumb_url","alt","name","msrp","year_published","min_players","max_players","primary_publisher","designers","join","min_playtime","max_playtime","min_age","average_user_rating","num_user_rating","url","target","dangerouslySetInnerHTML","__html","description","Wizard","isActive","isLoaded","error","resultItems","fetchUrl","setState","isHidden","playerCountParameter","categories","time","parseFloat","fetch","then","res","json","result","games","activeView","getGames","bind","valuetext","YearSlider","year","setValue","Slider","newValue","handleChange","valueLabelDisplay","aria-labelledby","getAriaValueText","min","max","marks","SelectPlayerCount","PlaytimeSlider","formControl","minWidth","maxWidth","noLabel","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","selectedNames","MechanicSelect","mechanicId","setMechanicId","FormControl","InputLabel","Select","labelId","multiple","selection","selectedName","includes","indexOf","splice","push","input","Input","renderValue","selected","mechanic","MenuItem","Checkbox","checked","ListItemText","CategorySelect","categoryId","setCategoryId","category","Sorting","sort_by","setSortBy","updateSort","option","OrderBySwitch","withStyles","switchBase","teal","thumb","track","Switch","OrderSwitch","ascending","FormGroup","component","Filters","mechanics","selectedMechanics","filters","filter","newFilters","submitFilters","message","updateFilters","Search","selectedFilters","getData","charAt","substr","getFilters","App","newActiveView","GlobalCss","changeActiveView","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ea9b118.chunk.js","sourcesContent":["import React from 'react'\r\nimport Link from '@material-ui/core/Link';\r\nimport pkg from '../../package.json';\r\n\r\nclass Footer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <footer>\r\n        <p>Made by: <Link href=\"https://github.com/dire\">dire</Link> | Copyright © {(new Date().getFullYear())}</p>\r\n        <p>Data is fetched from <Link href=\"https://www.boardgameatlas.com/\">Board Game Atlas</Link> API</p>\r\n        <p className=\"version\">v{pkg.version}</p>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n  menuIcon: {\r\n    marginRight: \"10px\",\r\n  },\r\n  topBarButton: {\r\n    '&:hover': {\r\n      backgroundColor: \"rgba(0, 0, 0, 0.12)\",\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function TopBar(props) {\r\n  const classes = useStyles();\r\n\r\n  const selectActiveView = event => {\r\n    props.selectActiveView(event.currentTarget.value)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Board Game Recommendation App - Find the next game to play\r\n          </Typography>\r\n          <Button className={classes.topBarButton} color=\"inherit\" onClick={selectActiveView} value=\"wizard\"><TimelineIcon className={classes.menuIcon} />Simple</Button>\r\n          <Button className={classes.topBarButton} color=\"inherit\" onClick={selectActiveView} value=\"detailedSearch\"><TuneIcon className={classes.menuIcon} />Detailed search</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toggleContainer: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  buttonGroup: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  toggleButton: {\r\n    color: 'white',\r\n    '&:hover': {\r\n      backgroundColor: \"rgba(0, 0, 0, 0.12)\",\r\n    },\r\n    '&.Mui-selected': {\r\n      color: \"white\",\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function ToggleButtons(props) {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n\r\n  const onOptionSelected = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n    props.onSelect(props.step, event.currentTarget.value);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" spacing={2}>\r\n      <Grid item sm={12} md={6}>\r\n        <div className={classes.toggleContainer}>\r\n          <ToggleButtonGroup\r\n            className={classes.buttonGroup}\r\n            value={alignment}\r\n            exclusive\r\n            onChange={onOptionSelected}\r\n            aria-label=\"text alignment\"\r\n          >\r\n            {props.options.map((item) =>\r\n              <ToggleButton className={classes.toggleButton} onClick={onOptionSelected} value={item.value} variant=\"contained\" color=\"primary\" key={item.value}>{item.label}</ToggleButton>\r\n            )}\r\n          </ToggleButtonGroup>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport WizardOptions from './WizardOptions'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    margin: '50px 0'\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  finishScreen: {\r\n    textAlign: 'center',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  wizardOptions: {\r\n    textAlign: 'center',\r\n    margin: '50px 0'\r\n  },\r\n  stepOptions: {\r\n    margin: '50px 0',\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Player count', 'Playtime', 'Theme'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Lone wolf or got a group?';\r\n    case 1:\r\n      return 'A quick round or full gaming night?';\r\n    case 2:\r\n      return 'Theme party!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLinearStepper(props) {\r\n  const classes = useStyles()\r\n  const [activeStep, setActiveStep] = React.useState(0)\r\n  const steps = getSteps()\r\n  const [playerCount, setPlayerCount] = React.useState(0)\r\n  const [playTime, setPlayTime] = React.useState(0)\r\n  const [theme, setTheme] = React.useState(0)\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1)\r\n\r\n    if (activeStep + 1 === steps.length) {\r\n      props.onFinish(playerCount, playTime, theme)\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1)\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0)\r\n  };\r\n\r\n  const updatePlayerCount = (label, value) => {\r\n    setPlayerCount(value)\r\n  }\r\n\r\n  const updatePlayTime = (label, value) => {\r\n    setPlayTime(value)\r\n  }\r\n\r\n  const updateTheme = (label, value) => {\r\n    setTheme(value)\r\n  }\r\n\r\n  const playerCountOptions = [\r\n    {\r\n      'label': 'Solo',\r\n      'value': 1\r\n    },\r\n    {\r\n      'label': 'Duo',\r\n      'value': 2\r\n    },\r\n    {\r\n      'label': '2-4',\r\n      'value': 3\r\n    },\r\n    {\r\n      'label': '4+',\r\n      'value': 4\r\n    },\r\n  ]\r\n\r\n  const playTimeOptions = [\r\n    {\r\n      'label': '10min',\r\n      'value': 10\r\n    },\r\n    {\r\n      'label': '1 hour',\r\n      'value': 60\r\n    },\r\n    {\r\n      'label': '2 hour',\r\n      'value': 120\r\n    },\r\n    {\r\n      'label': 'Got all night',\r\n      'value': 9999\r\n    },\r\n  ]\r\n\r\n  const themeOptions = [\r\n    {\r\n      'label': 'Fantasy',\r\n      'value': 'ZTneo8TaIO'\r\n    },\r\n    {\r\n      'label': 'Horror',\r\n      'value': 'cAIkk5aLdQ'\r\n    },\r\n    {\r\n      'label': 'Sci-fi',\r\n      'value': '3B3QpKvXD3'\r\n    },\r\n    {\r\n      'label': 'Strategy',\r\n      'value': 'O0ogzwLUe8'\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {}\r\n          const labelProps = {}\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div className={classes.finishScreen}>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.resetButton}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.wizardOptions}>\r\n            <Typography className={classes.instructions} variant=\"h3\">{getStepContent(activeStep)}</Typography>\r\n            {activeStep === 0 &&\r\n              <div className={classes.stepOptions}>\r\n                <WizardOptions step=\"playerCount\" onSelect={updatePlayerCount} options={playerCountOptions} />\r\n              </div>\r\n            }\r\n            {activeStep === 1 &&\r\n              <div className={classes.stepOptions}>\r\n                <WizardOptions step=\"playTime\" onSelect={updatePlayTime} options={playTimeOptions} />\r\n              </div>\r\n            }\r\n            {activeStep === 2 &&\r\n              <div className={classes.stepOptions}>\r\n                <WizardOptions step=\"theme\" onSelect={updateTheme} options={themeOptions} />\r\n              </div>\r\n            }\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Link from '@material-ui/core/Link'\r\n\r\nclass Results extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let items = this.props.results\r\n\r\n    const theme = createMuiTheme({\r\n      palette: {\r\n        primary: {\r\n          // light: will be calculated from palette.primary.main,\r\n          main: '#009688',\r\n          // dark: will be calculated from palette.primary.main,\r\n          // contrastText: will be calculated to contrast with palette.primary.main\r\n        },\r\n        secondary: {\r\n          light: '#0066ff',\r\n          main: '#0044ff',\r\n          // dark: will be calculated from palette.secondary.main,\r\n          contrastText: '#ffcc00',\r\n        },\r\n        // Used by `getContrastText()` to maximize the contrast between\r\n        // the background and the text.\r\n        contrastThreshold: 3,\r\n        // Used by the functions below to shift a color's luminance by approximately\r\n        // two indexes within its tonal palette.\r\n        // E.g., shift from Red 500 to Red 300 or Red 700.\r\n        tonalOffset: 0.2,\r\n      },\r\n    });\r\n\r\n    if (this.props.isFetching) {\r\n      return <div className=\"system-message\">Fetching games from the shelf...</div>\r\n    } else {\r\n      return (\r\n        <div>\r\n          <ThemeProvider theme={theme}>\r\n            <div className=\"results\">\r\n              <ul>\r\n                {items && items.map((item, index) => (\r\n                  <li className=\"result-item\" key={item.id}>\r\n                    <div className=\"game-thumbnail\">\r\n                      <img className=\"thumbnail\" src={item.thumb_url} alt={item.name} />\r\n                    </div>\r\n                    <div className=\"game-info\">\r\n                      <span className=\"result-number\">#{index + 1}</span><h2 className=\"game-title\">{item.name}</h2>\r\n                      <div className=\"game-details\">\r\n                        <div className=\"game-detail\">\r\n                          <span className=\"detail-title\">MSRP:</span> ${item.msrp}\r\n                        </div>\r\n                        <div className=\"game-detail\">\r\n                          <span className=\"detail-title\">Year:</span> {item.year_published}\r\n                        </div>\r\n                        <div className=\"game-detail\">\r\n                          <span className=\"detail-title\">Players:</span> {item.min_players} - {item.max_players}\r\n                        </div>\r\n                        <div className=\"game-detail\">\r\n                          <span className=\"detail-title\">Primary publisher:</span> {item.primary_publisher}\r\n                        </div>\r\n                        <div className=\"game-detail\">\r\n                          <span className=\"detail-title\">Designers:</span> {item.designers.join(', ')}\r\n                        </div>\r\n                        <div className=\"game-detail\">\r\n                          <span className=\"detail-title\">Playtime:</span> {item.min_playtime} - {item.max_playtime} min\r\n                        </div>\r\n                        <div className=\"game-detail\">\r\n                          <span className=\"detail-title\">Min age:</span> {item.min_age}\r\n                        </div>\r\n                        <div className=\"game-detail\">\r\n                          <span className=\"detail-title\">Avg. rating:</span> {item.average_user_rating} ({item.num_user_rating})\r\n                        </div>\r\n                        <div className=\"game-detail\">\r\n                          <span className=\"detail-title\">\r\n                            <Link href={item.url} target=\"_blank\">\r\n                              BGA Link\r\n                            </Link>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"game-description\" dangerouslySetInnerHTML={{__html: item.description}}></p>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </ThemeProvider>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\nimport Stepper from './WizardStepper'\r\nimport Results from '../Results'\r\n\r\nclass Wizard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isActive: true,\r\n      isLoaded: false,\r\n      error: null,\r\n      resultItems: [],\r\n      fetchUrl: '',\r\n      isFetching: false,\r\n    }\r\n  }\r\n\r\n  toggleHidden () {\r\n    this.setState({\r\n      isHidden: !this.state.isHidden\r\n    })\r\n  }\r\n\r\n  getGames (playerCount, playTime, theme) {\r\n    let playerCountParameter = ''\r\n    let categories = theme ? 'categories=' + theme : '';\r\n\r\n    if (!playTime) {\r\n      playTime = 9999\r\n    }\r\n\r\n    let time = parseFloat(playTime) + 1\r\n\r\n    switch(playerCount) {\r\n      case '1':\r\n        playerCountParameter = '&min_players=1'\r\n        break;\r\n      case '2':\r\n        playerCountParameter = '&lt_min_players=3'\r\n        break;\r\n      case '3':\r\n        playerCountParameter = '&lt_max_players=5'\r\n        break;\r\n      case '4':\r\n        playerCountParameter = '&gt_max_players=4'\r\n        break;\r\n      default:\r\n        playerCountParameter = '&min_players=1'\r\n    }\r\n\r\n    this.setState({\r\n      isFetching: true,\r\n    });\r\n\r\n    fetch(\"https://blooming-temple-02451.herokuapp.com/?\" + categories + '&lt_max_playtime=' +  time + playerCountParameter)\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          resultItems: result.games,\r\n          isFetching: false,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: false,\r\n          error,\r\n          isFetching: false,\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (this.props.activeView === 'wizard') {\r\n      return (\r\n        <div>\r\n          <Stepper onFinish={this.getGames.bind(this)} />\r\n          <Results results={this.state.resultItems} isFetching={this.state.isFetching} />\r\n        </div>\r\n      )\r\n    } else {\r\n      return (null)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Wizard","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nfunction valuetext(value) {\r\n  return `${value}`\r\n}\r\n\r\nexport default function YearSlider(props) {\r\n  const classes = useStyles()\r\n  let date = new Date()\r\n  let year = date.getFullYear()\r\n  const [value, setValue] = React.useState([2000, year]);\r\n\r\n  const marks = [\r\n    {\r\n      value: 1980,\r\n      label: '1980',\r\n    },\r\n    {\r\n      value: 1990,\r\n      label: '1990',\r\n    },\r\n    {\r\n      value: 2000,\r\n      label: '2000',\r\n    },\r\n    {\r\n      value: 2005,\r\n      label: '2005',\r\n    },\r\n    {\r\n      value: 2010,\r\n      label: 2010,\r\n    },\r\n    {\r\n      value: 2019,\r\n      label: '2019',\r\n    },\r\n    {\r\n      value: 2020,\r\n      label: '2020',\r\n    },\r\n  ];\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.handleChange('year-range', newValue)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"year-range\"\r\n        getAriaValueText={valuetext}\r\n        min={1980}\r\n        max={year}\r\n        marks={marks}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nfunction valuetext(value) {\r\n  return `${value}`\r\n}\r\n\r\nexport default function SelectPlayerCount(props) {\r\n  const classes = useStyles()\r\n  const [value, setValue] = React.useState([1, 4]);\r\n\r\n  const marks = [\r\n    {\r\n      value: 1,\r\n      label: '1',\r\n    },\r\n    {\r\n      value: 2,\r\n      label: '2',\r\n    },\r\n    {\r\n      value: 3,\r\n      label: '3',\r\n    },\r\n    {\r\n      value: 4,\r\n      label: '4',\r\n    },\r\n    {\r\n      value: 8,\r\n      label: '8',\r\n    },\r\n    {\r\n      value: 10,\r\n      label: '10',\r\n    },\r\n    {\r\n      value: 50,\r\n      label: '50',\r\n    },\r\n    {\r\n      value: 100,\r\n      label: '100',\r\n    },\r\n  ];\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.handleChange('player-range', newValue)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"player-range\"\r\n        getAriaValueText={valuetext}\r\n        min={1}\r\n        max={100}\r\n        marks={marks}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nfunction valuetext(value) {\r\n  return `${value}`\r\n}\r\n\r\nexport default function PlaytimeSlider(props) {\r\n  const classes = useStyles()\r\n  const [value, setValue] = React.useState([0, 300]);\r\n\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: '0',\r\n    },\r\n    {\r\n      value: 5,\r\n      label: '5',\r\n    },\r\n    {\r\n      value: 10,\r\n      label: '10',\r\n    },\r\n    {\r\n      value: 20,\r\n      label: '20',\r\n    },\r\n    {\r\n      value: 45,\r\n      label: '45',\r\n    },\r\n    {\r\n      value: 90,\r\n      label: '90',\r\n    },\r\n    {\r\n      value: 120,\r\n      label: '120',\r\n    },\r\n    {\r\n      value: 180,\r\n      label: '180',\r\n    },\r\n    {\r\n      value: 240,\r\n      label: '240',\r\n    },\r\n    {\r\n      value: 300,\r\n      label: '300',\r\n    },\r\n  ];\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.handleChange('playtime-range', newValue)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"playtime-range\"\r\n        getAriaValueText={valuetext}\r\n        min={0}\r\n        max={300}\r\n        marks={marks}\r\n        step={5}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n    maxWidth: '100%',\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 10 + ITEM_PADDING_TOP,\r\n      width: 320,\r\n    },\r\n  },\r\n};\r\n\r\nlet selectedNames = []\r\n\r\nexport default function MechanicSelect (props) {\r\n  const options = props.options\r\n  const classes = useStyles()\r\n  const [mechanicId, setMechanicId] = React.useState([])\r\n\r\n  const handleChange = (event, selection) => {\r\n    let selectedName = selection.props.name\r\n\r\n    if (selectedNames.includes(selectedName)) {\r\n      let index = selectedNames.indexOf(selectedName)\r\n      selectedNames.splice(index, 1)\r\n    } else {\r\n      selectedNames.push(selectedName)\r\n    }\r\n\r\n    setMechanicId(event.target.value)\r\n    props.handleChange('mechanic', event.target.value)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"mechanic-select-label\">Game Mechanics</InputLabel>\r\n        <Select\r\n          labelId=\"mechanic-select-label\"\r\n          id=\"mechanic-select\"\r\n          multiple\r\n          value={mechanicId}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={selected => selectedNames.join(', ')}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {options.map(mechanic => (\r\n            <MenuItem key={mechanic.id} value={mechanic.id} name={mechanic.name}>\r\n              <Checkbox checked={mechanicId.indexOf(mechanic.id) > -1} />\r\n              <ListItemText primary={mechanic.name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n    maxWidth: '100%',\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 10 + ITEM_PADDING_TOP,\r\n      width: 320,\r\n    },\r\n  },\r\n};\r\n\r\nlet selectedNames = []\r\n\r\nexport default function CategorySelect (props) {\r\n  const options = props.options\r\n  const classes = useStyles()\r\n  const [categoryId, setCategoryId] = React.useState([])\r\n\r\n  const handleChange = (event, selection) => {\r\n    let selectedName = selection.props.name\r\n\r\n    if (selectedNames.includes(selectedName)) {\r\n      let index = selectedNames.indexOf(selectedName)\r\n      selectedNames.splice(index, 1)\r\n    } else {\r\n      selectedNames.push(selectedName)\r\n    }\r\n\r\n    setCategoryId(event.target.value);\r\n    props.handleChange('categories', event.target.value)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"category-select-label\">Categories</InputLabel>\r\n        <Select\r\n          labelId=\"category-select-label\"\r\n          id=\"category-select\"\r\n          multiple\r\n          value={categoryId}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={selected => selectedNames.join(', ')}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {options.map(category => (\r\n            <MenuItem key={category.id} value={category.id} name={category.name}>\r\n              <Checkbox checked={categoryId.indexOf(category.id) > -1}/>\r\n              <ListItemText primary={category.name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n    maxWidth: '100%',\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 10 + ITEM_PADDING_TOP,\r\n      width: 320,\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Sorting (props) {\r\n  const classes = useStyles();\r\n  const [sort_by, setSortBy] = React.useState('popularity');\r\n\r\n  const sortOptions = [\r\n    {\r\n      \"id\": \"popularity\",\r\n      \"name\": \"popularity\"\r\n    },\r\n    {\r\n      \"id\": \"name\",\r\n      \"name\": \"name\"\r\n    },\r\n    {\r\n      \"id\": \"year_published\",\r\n      \"name\": \"year published\"\r\n    }\r\n  ]\r\n\r\n  const updateSort = event => {\r\n    setSortBy(event.target.value)\r\n    props.updateSort('sortBy', event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"sort-by-label\">Sort by</InputLabel>\r\n        <Select\r\n          labelId=\"sort-by-label\"\r\n          id=\"mechanic-select\"\r\n          value={sort_by}\r\n          onChange={updateSort}\r\n          input={<Input />}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {sortOptions.map(option => (\r\n            <MenuItem key={option.id} value={option.id}>\r\n              <ListItemText primary={option.name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { teal } from '@material-ui/core/colors'\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\n\r\nconst OrderBySwitch = withStyles(theme => ({\r\n  switchBase: {\r\n    color: teal[500],\r\n    '&$checked': {\r\n      color: teal[500],\r\n    },\r\n    '&$checked + $track': {\r\n      backgroundColor: teal[500],\r\n    },\r\n  },\r\n  thumb: {},\r\n  checked: {},\r\n  track: {},\r\n}))(Switch)\r\n\r\nexport default function OrderSwitch(props) {\r\n  const [state, setState] = React.useState({ascending: false})\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked })\r\n    props.handleChange('ascending', event.target.checked)\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      <Typography component=\"div\">\r\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n          <Grid item>Descending</Grid>\r\n          <ArrowDownwardIcon />\r\n          <Grid item>\r\n            <OrderBySwitch\r\n              checked={state.ascending}\r\n              onChange={handleChange('ascending')}\r\n              value=\"ascending\" \r\n            />\r\n          </Grid>\r\n          <ArrowUpwardIcon />\r\n          <Grid item>Ascending</Grid>\r\n        </Grid>\r\n      </Typography>\r\n    </FormGroup>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport SelectYear from './YearSlider'\r\nimport SelectPlayerCount from './SelectPlayerCount'\r\nimport PlaytimeSlider from './PlaytimeSlider'\r\nimport Button from '@material-ui/core/Button'\r\nimport MechanicSelect from './MechanicSelect'\r\nimport CategorySelect from './CategorySelect'\r\nimport Sorting from './Sorting'\r\nimport OrderSwitch from './OrderSwitch'\r\n\r\nclass Filters extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      mechanics: [],\r\n      categories: [],\r\n      selectedMechanics: '',\r\n      filters: {\r\n        'mechanic': [],\r\n        'categories': [],\r\n        'min_players': [1],\r\n        'max_players': [4],\r\n        'gt_min_playtime': [0],\r\n        'lt_max_playtime': [300],\r\n        'gt_year_published' : [2000],\r\n        'lt_year_published' : [2020],\r\n        'ascending' : 'false',\r\n        'sortBy' : 'popularity'\r\n      },\r\n    };\r\n  }\r\n\r\n  updateFilters(filter, newValue) {\r\n    const newFilters = this.state.filters\r\n    if (filter === 'year-range') {\r\n      newFilters['gt_year_published'] = newValue[0] - 1\r\n      newFilters['lt_year_published'] = newValue[1] + 1\r\n    } else if(filter ==='player-range') {\r\n      newFilters['min_players'] = newValue[0]\r\n      newFilters['max_players'] = newValue[1]\r\n    } else if(filter ==='playtime-range') {\r\n      newFilters['gt_min_playtime'] = newValue[0] - 1\r\n      newFilters['lt_max_playtime'] = newValue[1] + 1\r\n    } else {\r\n      newFilters[filter] = newValue\r\n    }\r\n\r\n    this.setState({\r\n      filters: newFilters\r\n    })\r\n  };\r\n\r\n  submitFilters() {\r\n    this.props.submitFilters(this.state.filters)\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://blooming-temple-02451.herokuapp.com/mechanics.php\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            mechanics: result.mechanics\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    fetch(\"https://blooming-temple-02451.herokuapp.com/categories.php\")\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          categories: result.categories\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n  render () {\r\n    const { error, isLoaded, mechanics, categories } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>\r\n    } else if (!isLoaded) {\r\n      return <div>Fetching games from the shelf...</div>\r\n    } else {\r\n      return (\r\n        <form className=\"search-filters\">\r\n          <fieldset>\r\n            <legend>Filters</legend>\r\n            <div className=\"filter\"><MechanicSelect handleChange={this.updateFilters.bind(this)} options={mechanics} /></div>\r\n            <div className=\"filter\"><CategorySelect handleChange={this.updateFilters.bind(this)} options={categories} /></div>\r\n            <div className=\"filter\">Players: <SelectPlayerCount handleChange={this.updateFilters.bind(this)} /></div>\r\n            <div className=\"filter\">Playtime: <PlaytimeSlider handleChange={this.updateFilters.bind(this)} /></div>\r\n            <div className=\"filter\">Release year: <SelectYear handleChange={this.updateFilters.bind(this)} /></div>\r\n          </fieldset>\r\n          <fieldset>\r\n            <legend>Sorting</legend>\r\n            <Sorting key=\"sorting\" updateSort={this.updateFilters.bind(this)} />\r\n            <OrderSwitch key=\"ordering\" handleChange={this.updateFilters.bind(this)} />\r\n          </fieldset>\r\n          <div className=\"submit-filters\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.submitFilters.bind(this)}>Search!</Button>\r\n          </div>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Filters","import React from 'react'\r\nimport Filters from './Filters'\r\nimport Results from './Results'\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      filters: [],\r\n      fetchUrl: 'https://blooming-temple-02451.herokuapp.com/?',\r\n      selectedFilters: '',\r\n      isActive: false,\r\n      isFetching: false,\r\n    };\r\n  }\r\n\r\n  getData() {\r\n    this.setState({\r\n      isFetching: true,\r\n    });\r\n\r\n    fetch(this.state.fetchUrl)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result.games,\r\n            isFetching: false\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n            isFetching: false\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  getFilters(filters) {\r\n    let selectedFilters = ''\r\n\r\n    if (filters['mechanic'].length > 0) {\r\n      selectedFilters = selectedFilters + '&mechanics=' + filters['mechanic']\r\n    }\r\n\r\n    if (filters['categories'].length > 0) {\r\n      selectedFilters = selectedFilters + '&categories=' + filters['categories']\r\n    }\r\n\r\n\r\n    if (filters['gt_min_playtime'] !== null) {\r\n      selectedFilters = selectedFilters + '&gt_min_playtime=' + filters['gt_min_playtime']\r\n    }\r\n\r\n    if (filters['lt_max_playtime'] !== null) {\r\n      selectedFilters = selectedFilters + '&lt_max_playtime=' + filters['lt_max_playtime']\r\n    }\r\n\r\n    if (filters['min_players'] !== null) {\r\n      selectedFilters = selectedFilters + '&min_players=' + filters['min_players']\r\n    }\r\n\r\n    if (filters['max_players'] !== null) {\r\n      selectedFilters = selectedFilters + '&max_players=' + filters['max_players']\r\n    }\r\n\r\n    if (filters['gt_year_published'] !== null) {\r\n      selectedFilters = selectedFilters + '&gt_year_published=' + filters['gt_year_published']\r\n    }\r\n\r\n    if (filters['lt_year_published'] !== null) {\r\n      selectedFilters = selectedFilters + '&lt_year_published=' + filters['lt_year_published']\r\n    }\r\n\r\n    if (filters['sortBy'] !== null) {\r\n      selectedFilters = selectedFilters + '&order_by=' + filters['sortBy']\r\n    }\r\n\r\n    if (filters['ascending'] !== null) {\r\n      selectedFilters = selectedFilters + '&ascending=' + filters['ascending']\r\n    }\r\n\r\n    if (selectedFilters.charAt(0) === '&') {\r\n      selectedFilters = selectedFilters.substr(1)\r\n    }\r\n\r\n    this.setState({\r\n      filters: filters,\r\n      selectedFilters: selectedFilters,\r\n      fetchUrl: 'https://blooming-temple-02451.herokuapp.com/?' + selectedFilters\r\n    }, () => {\r\n      this.getData()\r\n    })\r\n  };\r\n\r\n  render() {\r\n    if (this.props.activeView === 'detailedSearch') {\r\n      const { error, isLoaded, items, isFetching } = this.state\r\n      if (error) {\r\n        return <div className=\"system-message\">Error: {error.message}</div>\r\n      } else if (!isLoaded) {\r\n        return <div className=\"system-message\">Fetching games from the shelf...</div>\r\n      } else {\r\n        return (\r\n          <div className=\"search\">\r\n            <Filters submitFilters={this.getFilters.bind(this)} />\r\n            <Results results={items} isFetching={isFetching} />\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return (null)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Container from '@material-ui/core/Container'\r\nimport Footer from './Components/Footer'\r\nimport TopBar from './Components/TopBar'\r\nimport Wizard from './Components/Wizard/Wizard'\r\nimport Search from './Components/Search'\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeView: 'wizard'\r\n    }\r\n  }\r\n\r\n  changeActiveView(newActiveView) {\r\n    this.setState({\r\n      activeView: newActiveView\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const theme = createMuiTheme({\r\n      palette: {\r\n        primary: {\r\n          // light: will be calculated from palette.primary.main,\r\n          main: '#009688',\r\n          // dark: will be calculated from palette.primary.main,\r\n          // contrastText: will be calculated to contrast with palette.primary.main\r\n        },\r\n        secondary: {\r\n          light: '#0066ff',\r\n          main: '#0044ff',\r\n          // dark: will be calculated from palette.secondary.main,\r\n          contrastText: '#ffcc00',\r\n        },\r\n        // Used by `getContrastText()` to maximize the contrast between\r\n        // the background and the text.\r\n        contrastThreshold: 3,\r\n        // Used by the functions below to shift a color's luminance by approximately\r\n        // two indexes within its tonal palette.\r\n        // E.g., shift from Red 500 to Red 300 or Red 700.\r\n        tonalOffset: 0.2,\r\n      },\r\n    });\r\n\r\n    const GlobalCss = withStyles({\r\n      // @global is handled by jss-plugin-global.\r\n      '@global': {\r\n        // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\r\n        '.MuiSlider-thumb': {\r\n          height: 20,\r\n          width: 20,\r\n          marginTop: \"-8px\",\r\n          marginLeft: \"-9px\",\r\n        },\r\n        '.MuiSlider-rail': {\r\n          height: 4,\r\n        },\r\n        '.MuiSlider-track': {\r\n          height: 4\r\n        },\r\n        '.MuiSlider-mark': {\r\n          height: 4\r\n        }\r\n      }\r\n    })(() => null);\r\n\r\n    return (\r\n      <div>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalCss />\r\n          <TopBar selectActiveView={this.changeActiveView.bind(this)} />\r\n          <Container className=\"main-content\" maxWidth=\"lg\">\r\n            <Wizard activeView={this.state.activeView} />\r\n            <Search activeView={this.state.activeView} />\r\n          </Container>\r\n          <Container maxWidth=\"lg\">\r\n            <Footer />\r\n          </Container>\r\n        </ThemeProvider>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('board-game-recommender'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}